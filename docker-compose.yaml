services:
  # Blue service - Primary
  app_blue:
    image: ${BLUE_IMAGE}
    container_name: app_blue
    ports:
      - "8081:3000"
    environment:
      - APP_POOL=blue
      - RELEASE_ID=${RELEASE_ID_BLUE}
      - PORT=3000
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/healthz"]
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 10s

  # Green service - Backup
  app_green:
    image: ${GREEN_IMAGE}
    container_name: app_green
    ports:
      - "8082:3000"
    environment:
      - APP_POOL=green
      - RELEASE_ID=${RELEASE_ID_GREEN}
      - PORT=3000
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/healthz"]
      interval: 5s
      timeout: 3s
      retries: 3
      start_period: 10s

  # Nginx reverse proxy with auto-failover
  nginx:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    container_name: nginx_lb
    ports:
      - "8080:80"
    environment:
      - ACTIVE_POOL=${ACTIVE_POOL}
    volumes:
      - ./nginx.conf.template:/etc/nginx/nginx.conf.template:ro
      - ./entrypoint.sh:/entrypoint.sh:ro
    networks:
      - app_network
    depends_on:
      - app_blue
      - app_green
    command: ["/entrypoint.sh"]

networks:
  app_network:
    driver: bridge